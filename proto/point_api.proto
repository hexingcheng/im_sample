syntax = "proto3";
option go_package = "./;grpc";

package grpc;
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "point.proto";

// The point service definitcion.
service PointService {
  rpc AddPoints (AddPointsRequest) returns (AddPointsResponse) {
      option (google.api.http) = {
        post: "/v1/points"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
        security: {};
        responses: {
          key: "401";
          value: {
            description: "unauthenticated(code = UNAUTHENTICATED)";
            schema: {
              json_schema: {
                ref: ".ErrorResponse";
              }
            }
          }
        }
        responses: {
          key: "404";
          value: {
            description: "not found(code = NOT_FOUND)";
            schema: {
              json_schema: {
                ref: ".ErrorResponse";
              }
            }
          }
        }
      };
    }
    rpc GetRanking (google.protobuf.Empty) returns (GetRankingResponse) {
      option (google.api.http) = {
        get: "/v1/ranking"
      };
      option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
        security: {};
        responses: {
          key: "401";
          value: {
            description: "unauthenticated(code = UNAUTHENTICATED)";
            schema: {
              json_schema: {
                ref: ".ErrorResponse";
              }
            }
          }
        }
        responses: {
          key: "404";
          value: {
            description: "not found(code = NOT_FOUND)";
            schema: {
              json_schema: {
                ref: ".ErrorResponse";
              }
            }
          }
        }
      };
    }
}
message AddPointsRequest {
  uint32 reservation_id = 1;
  NumExtension num_extension_times = 2; // 何回分の延長かどうか。 最大 3回 まで
  enum NumExtension {
  first = 0;     //初回購入
  one = 1;       //1回延長
  two = 2;       //2回延長
  three = 3;     //3回延長
}

}
message AddPointsResponse {
  uint32 points = 1;
}

message GetRankingResponse {
  repeated RankingInfluencer weekly_ranking = 1;
  repeated RankingInfluencer monthly_ranking = 2;
} 